<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 해당 파일에 모든 쿼리문을 작성 -->
<!--by수경 학생의 휴학, 복학, 전과 복수전공 신청을 위한 학생 데이터 mapper입니다.-->
<mapper namespace="studentMapper">

<!-- by수경 STU테이블의 mapper입니다. -->
<resultMap type="kh.study.NF.student.vo.StudentVO" id="student">
<id column="STU_NO" property="stuNo"/>
<result column="COLL_NO" property="collNo"/>
<result column="DEPT_NO" property="deptNo"/>
<result column="DOUBLE_NO" property="doubleNo"/>
<result column="STU_YEAR" property="stuYear"/>
<result column="STU_SEM" property="stuSem"/>
<result column="STU_STATUS" property="stuStatus"/>
<result column="MEM_NO" property="memNo"/>
<!--by수경 1:1관계 전공대학, 전공학과, 복수전공-->
<association property="memberVO" resultMap="member"/>
<association property="deptVO" resultMap="professorMapper.dept"/>
<association property="collVO" resultMap="professorMapper.coll"/>
<association property="doubleMajorVO" resultMap="doubleMajor"/>

</resultMap>

<!--by수경 member테이블의 mapper입니다. -->
<resultMap type="kh.study.NF.member.vo.MemberVO" id="member">
<id column="MEM_NO" property="memNo"/>
<result column="MEM_PW" property="memPw"/>
<result column="MEM_NAME" property="memName"/>
<result column="MEM_EMAIL" property="memEmail"/>
<result column="MEM_ADDR" property="memAddr"/>
<result column="MEM_ADDR_DETAIL" property="memAddrDetail"/>
<result column="MEM_TELL" property="memTell"/>
<result column="MEM_IMAGE" property="memImage"/>
<result column="MEM_GENDER" property="memGender"/>
<result column="MEM_BIRTH" property="memBirth"/>
<result column="MEM_ROLE" property="memRole"/>
</resultMap>

<!--by수경 복수전공 테이블 mapper입니다. -->
<resultMap type="kh.study.NF.student.vo.DoubleMajorVO" id="doubleMajor">
<id column="DOUBLE_NO" property="doubleNo"/>
<result column="STU_NO" property="stuNo"/>
<result column="DOUBLE_COLL" property="doubleColl"/>
<result column="DOUBLE_DEPT" property="doubleDept"/>
</resultMap>

<resultMap type="kh.study.NF.dept.vo.DeptVO" id="dept">
<id column="DEPT_NO" property="deptNo"/>
<result column="DEPT_NAME" property="deptName"/>
<result column="COLL_NO" property="collNo"/>
<result column="STU_NO" property="stuNo"/>
</resultMap>

<!-- by수경 학생의 휴학/복학/전과신청 시 학생정보를 나타내는 테이블 데이터/ 복수전공 추가 -->
<select id="studentInfo" resultMap="student">
	SELECT S.MEM_NO
		, MEM_NAME
		, MEM_GENDER
		, TO_CHAR(MEM_BIRTH, 'YYYY"년"MM"월"DD"일"')AS MEM_BIRTH
		, STU_NO
		, (SELECT TO_CHAR(STU_YEAR)||'학년'||' '||TO_CHAR(STU_SEM)||'학기'FROM STU WHERE STU_NO = #{stuNo})AS STU_YEAR 
		, STU_STATUS
		, (SELECT DEPT_NAME FROM DEPT WHERE DEPT_NO = S.DEPT_NO)AS DEPT_NAME
		, (SELECT COLL_NAME FROM COLLEAGE WHERE COLL_NO = S.COLL_NO)AS COLL_NAME
		, DEPT_NO
		, COLL_NO
		, (SELECT DEPT_NAME FROM DEPT WHERE DEPT_NO = 
									(SELECT DOUBLE_DEPT FROM DOUBLE_MAJOR D 
													WHERE D.DOUBLE_NO = S.DOUBLE_NO AND S.STU_NO = D.STU_NO)) AS DOUBLE_NO
	FROM STU S, MEMBER M
	WHERE S.MEM_NO = M.MEM_NO
	AND STU_NO = #{stuNo}
</select>

<!--by수경 전공대학 전공학과 선택 시 재학중인 학과 제외  --> 
<select id="DeptList" resultMap="dept">
	SELECT DEPT_NO, DEPT_NAME
	FROM DEPT D
	WHERE DEPT_NO NOT IN (SELECT DEPT_NO
                    	FROM STU
                    	WHERE DEPT_NO = D.DEPT_NO
                    	AND STU_NO = #{stuNo})
   <!--by수경 전체선택은 value값으로 null이나 빈공백을 주었다.-->
   <if test="_parameter != null">               	
    AND COLL_NO = #{collNo}
   </if> 
    ORDER BY COLL_NO
</select>

<!--by수경 학생의 휴학신청 확정 시 상태 update Mapper -->
<update id="takeOffStu">
	UPDATE STU 
	SET STU_STATUS = (SELECT PROCESS_STATUS FROM DEPT_MANAGE WHERE STU_NO = #{stuNo})
	WHERE STU_NO = #{stuNo}
	
</update>

<!--by수경 학생의 복학신청 확정 시 상태 update Mapper -->
<update id="returnStu">
	UPDATE STU 
	SET STU_STATUS = (SELECT PROCESS_STATUS FROM DEPT_MANAGE WHERE STU_NO = #{stuNo})
	WHERE STU_NO = #{stuNo}
	
</update>

<!-- by수경 학생의 전과신청 확정 시 상태 update -->
<update id="changeMajorStu">
	UPDATE STU 
	SET DEPT_NO = (SELECT TO_DEPT FROM DEPT_MANAGE WHERE STU_NO = #{stuNo})
	  , COLL_NO = (SELECT TO_COLL FROM DEPT_MANAGE WHERE STU_NO = #{stuNo})
	WHERE STU_NO = #{stuNo}
</update>

<!-- by수경 학생의 복수전공 신청 확정 시 상태 update -->
<insert id="insertDoubleMajor">
<selectKey resultType="String" keyProperty="doubleNo" order="BEFORE">
SELECT 'DOUBLE_'|| LPAD(NVL(MAX(TO_NUMBER(SUBSTR(DOUBLE_NO, 8))), 0)+1, 3, 0) FROM DOUBLE_MAJOR
</selectKey>

INSERT INTO DOUBLE_MAJOR (DOUBLE_NO
						, STU_NO
						, DOUBLE_COLL
						, DOUBLE_DEPT
			  	)VALUES( #{doubleNo}
				 		, #{stuNo}
				 		, (SELECT DOUBLE_MAJOR_COLL FROM DEPT_MANAGE WHERE STU_NO = #{stuNo})
				 		, (SELECT DOUBLE_MAJOR_DEPT FROM DEPT_MANAGE WHERE STU_NO = #{stuNo})
);
</insert>

</mapper>
