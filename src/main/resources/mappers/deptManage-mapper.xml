<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 해당 파일에 모든 쿼리문을 작성 -->
<!--by수경 학생의 휴학, 복학, 전과 복수전공 신청 및 관리자 승인을 위한 mapper입니다.-->
<!--by수경 deptManage mapper입니다.  -->
<mapper namespace="deptManageMapper">

<resultMap type="kh.study.NF.emp.vo.DeptManageVO" id="deptManage">
<id column="APPLY_NO" property="applyNo"/>
<result column="STU_NO" property="stuNo"/>
<result column="APPLY_CODE" property="applyCode"/>
<result column="APPLY_DATE" property="applyDate"/>
<result column="APPLY_REASON" property="applyReason"/>
<result column="APPROVAL_DATE" property="approvalDate"/>
<result column="PROCESS_STATUS" property="processStatus"/>
<result column="FROM_COLL" property="fromColl"/>
<result column="FROM_DEPT" property="fromDept"/>
<result column="TO_COLL" property="toColl"/>
<result column="TO_DEPT" property="toDept"/>
<result column="DOUBLE_MAJOR_COLL" property="doubleMajorColl"/>
<result column="DOUBLE_MAJOR_DEPT" property="doubleMajorDept"/>
<result column="STU_YEAR" property="stuYear"/>
<result column="STU_SEM" property="stuSem"/>
<!--by수경 회원 이름 데이터를 위해 추가 -->
<result column="MEM_NAME" property="memName"/>
<!--by수경 관리자에게 전과/복수전공 신청서 보여주기 위하여 추가 -->
<association property="studentVO" resultMap="studentMapper.student"/>
</resultMap>

<!-- by수경 학적신청 KPI 데이터를 위하여 새롭게 VO 생성 및 resultMap 추가 -->
<resultMap type="kh.study.NF.emp.vo.ChartVO" id="chart">
	<result column="APPLY_NO_CNT" property="applyNoCnt"/>
	<result column="APPROVAL_DATE_CNT" property="approvalDateCnt"/>
	<result column="DAY" property="day"/>
</resultMap>

<!--by수경 학사경고 차트 -->
<resultMap type="kh.study.NF.emp.vo.ProbationChartVO" id="probationCnt">
	<result column="PROB_NO_CNT" property="probNoCnt"/>
	<result column="PROB_DATE_CNT" property="probDateCnt"/>
	<result column="DAY" property="day"/>
</resultMap>
<!--by수경 제적 차트 -->
<resultMap type="kh.study.NF.emp.vo.StuOutChartVO" id="stuOutCnt">
	<result column="STU_OUT_CNT" property="stuOutCnt"/>
	<result column="STU_OUT_DATE_CNT" property="stuOutDateCnt"/>
	<result column="DAY" property="day"/>
</resultMap>

<!--by수경 학생의 복학신청 접수하기-->
<insert id="applyReturnUniv">
	
	<selectKey resultType="String" keyProperty="applyNo" order="BEFORE">
	
	SELECT 'APPLY_'|| LPAD(NVL(MAX(TO_NUMBER(SUBSTR(APPLY_NO,7))), 0)+1, 3, 0) 
	FROM DEPT_MANAGE
	
	</selectKey>
	
	INSERT INTO DEPT_MANAGE(APPLY_NO
							, STU_NO
							, APPLY_CODE
							, FROM_COLL
							, FROM_DEPT
							, STU_YEAR
							, STU_SEM
							, PROCESS_STATUS
					)VALUES(  #{applyNo}
							, #{stuNo}
							, #{applyCode}
							, #{fromColl}
							, #{fromDept}
							, (SELECT STU_YEAR FROM STU WHERE STU_NO = #{stuNo})
							, (SELECT STU_SEM FROM STU WHERE STU_NO = #{stuNo})
							, #{processStatus}
	)
</insert>

<!--by수경 학생의 휴학신청 접수하기-->
<insert id="applyTakeOffUniv">

	<selectKey resultType="String" keyProperty="applyNo" order="BEFORE">
	SELECT 'APPLY_'|| LPAD(NVL(MAX(TO_NUMBER(SUBSTR(APPLY_NO,7))), 0)+1, 3, 0) FROM DEPT_MANAGE
	</selectKey>
	
	INSERT INTO DEPT_MANAGE(APPLY_NO
							, STU_NO
							, APPLY_CODE
							, APPLY_REASON
							, FROM_COLL
							, FROM_DEPT
							, STU_YEAR
							, STU_SEM
							, PROCESS_STATUS
					)VALUES(  #{applyNo}
							, #{stuNo}
							, #{applyCode}
							, #{applyReason}
							, #{fromColl}
							, #{fromDept}
							, (SELECT STU_YEAR FROM STU WHERE STU_NO = #{stuNo})
							, (SELECT STU_SEM FROM STU WHERE STU_NO = #{stuNo})
							, #{processStatus}
	)
</insert>


<!--by수경 학생의 전과신청 접수하기-->
<insert id="applyChangeMajor">

	<selectKey resultType="String" keyProperty="applyNo" order="BEFORE">
	SELECT 'APPLY_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(APPLY_NO,7))), 0)+1, 3, 0) 
	FROM DEPT_MANAGE
	</selectKey>
	
	INSERT INTO DEPT_MANAGE(APPLY_NO
							, STU_NO
							, APPLY_CODE
							, APPLY_REASON
							, FROM_COLL
							, FROM_DEPT
							, TO_COLL
							, TO_DEPT
							, STU_YEAR
							, STU_SEM
							, PROCESS_STATUS
					)VALUES(  #{applyNo}
							, #{stuNo} 
							, #{applyCode}
							, #{applyReason}
							, #{fromColl}
							, #{fromDept}
							, #{toColl}
							, #{toDept}
							, (SELECT STU_YEAR FROM STU WHERE STU_NO = #{stuNo})
							, (SELECT STU_SEM FROM STU WHERE STU_NO = #{stuNo})
							, #{processStatus}
	)
</insert>


<!--by수경 학생의 복수전공 신청 접수하기-->
<insert id="applyAddMajor">
<selectKey resultType="String" keyProperty="applyNo" order="BEFORE">
SELECT 'APPLY_'|| LPAD(NVL(MAX(TO_NUMBER(SUBSTR(APPLY_NO,7))), 0)+1, 3, 0) FROM DEPT_MANAGE
</selectKey>
	
	INSERT INTO DEPT_MANAGE(APPLY_NO
							, STU_NO
							, APPLY_CODE
							, APPLY_REASON
							, FROM_COLL
							, FROM_DEPT
							, DOUBLE_MAJOR_COLL
							, DOUBLE_MAJOR_DEPT
							, STU_YEAR
							, STU_SEM
							, PROCESS_STATUS
					)VALUES(  #{applyNo}
							, #{stuNo}
							, #{applyCode}
							, #{applyReason}
							, #{fromColl}
							, #{fromDept}
							, #{doubleMajorColl}
							, #{doubleMajorDept}
							, (SELECT STU_YEAR FROM STU WHERE STU_NO = #{stuNo})
							, (SELECT STU_SEM FROM STU WHERE STU_NO = #{stuNo})
							, #{processStatus}
	)
</insert>


<!--by수경 학생에게 복학, 휴학, 전과, 복수전공 신청 내역을 보여주는 페이지 목록조회 -->
<select id="stuApplyList" resultMap="deptManage">
	SELECT APPLY_NO
		 , (SELECT COLL_NAME FROM COLLEAGE WHERE COLL_NO = FROM_COLL)AS FROM_COLL
		 , (SELECT DEPT_NAME FROM DEPT WHERE DEPT_NO = FROM_DEPT)AS FROM_DEPT
		 , (SELECT COLL_NAME FROM COLLEAGE WHERE COLL_NO = TO_COLL) AS TO_COLL
		 , (SELECT DEPT_NAME FROM DEPT WHERE DEPT_NO =TO_DEPT) AS TO_DEPT
		 , (SELECT COLL_NAME FROM COLLEAGE WHERE COLL_NO = DOUBLE_MAJOR_COLL) AS DOUBLE_MAJOR_COLL
		 , (SELECT DEPT_NAME FROM DEPT WHERE DEPT_NO = DOUBLE_MAJOR_DEPT) AS DOUBLE_MAJOR_DEPT
		 , APPLY_CODE
		 , TO_CHAR(APPLY_DATE, 'YYYY"년"MM"월"DD"일"')AS APPLY_DATE
		 , APPROVAL_DATE
		 , DECODE(PROCESS_STATUS, 'waiting','접수완료','accept','승인완료')AS PROCESS_STATUS
	FROM DEPT_MANAGE
	WHERE STU_NO = #{stuNo}
	 
</select>

<!--by수경 관리자에게 학생의 복학, 휴학, 전과, 복수전공 신청 목록 보여주는 페이지-->
<select id="applyList" resultMap="deptManage" parameterType="hashMap">
	SELECT APPLY_NO
		 , (SELECT COLL_NAME FROM COLLEAGE WHERE COLL_NO = FROM_COLL)AS FROM_COLL
		 , (SELECT DEPT_NAME FROM DEPT WHERE DEPT_NO = FROM_DEPT)AS FROM_DEPT
		 , (SELECT COLL_NAME FROM COLLEAGE WHERE COLL_NO = TO_COLL) AS TO_COLL
		 , (SELECT DEPT_NAME FROM DEPT WHERE DEPT_NO =TO_DEPT) AS TO_DEPT
		 , (SELECT COLL_NAME FROM COLLEAGE WHERE COLL_NO = DOUBLE_MAJOR_COLL)AS DOUBLE_MAJOR_COLL
		 , (SELECT DEPT_NAME FROM DEPT WHERE DEPT_NO = DOUBLE_MAJOR_DEPT)AS DOUBLE_MAJOR_DEPT
		 , APPLY_CODE
		 , TO_CHAR(APPLY_DATE, 'YYYY"년"MM"월"DD"일"')AS APPLY_DATE
		 , APPROVAL_DATE
		 , PROCESS_STATUS
		 , STU_NO
		 , (SELECT TO_CHAR(STU_YEAR)||'학년'||' '||TO_CHAR(STU_SEM)||'학기'FROM DEPT_MANAGE WHERE APPLY_NO = D.APPLY_NO)AS STU_YEAR 
		 , (SELECT MEM_NAME FROM MEMBER WHERE MEM_NO = (SELECT MEM_NO 
		 												FROM STU 
		 												WHERE STU_NO = D.STU_NO))AS MEM_NAME
	FROM DEPT_MANAGE D
	WHERE 1 = 1
	AND APPLY_CODE = #{applyCode}
	<!-- 검색조건 기능 추가로 인하여 choose when을 사용하여 각 케이스별로 분리하여 데이터 받은 후 쿼리 실행 되도록 함-->
	<choose>
		<when test="applyCode.equals('changeMajor')">
			<if test="changeMajor_fromDate != null and !changeMajor_fromDate.equals('')">
				AND TO_CHAR(APPLY_DATE, 'YYYY-MM-DD') &gt;= #{changeMajor_fromDate}
			</if>
			<if test="changeMajor_toDate != null and !changeMajor_toDate.equals('')">
				AND TO_CHAR(APPLY_DATE, 'YYYY-MM-DD') &lt;= #{changeMajor_toDate}
			</if>
			<if test="changeMajor_status !=null and !changeMajor_status.equals('')">
				AND PROCESS_STATUS = #{changeMajor_status}
			</if>
		</when>
		<when test="applyCode.equals('doubleMajor')">
			<if test="doubleMajor_fromDate != null and !doubleMajor_fromDate.equals('')">
				AND TO_CHAR(APPLY_DATE, 'YYYY-MM-DD') &gt;= #{doubleMajor_fromDate}
			</if>
			<if test="doubleMajor_toDate != null and !doubleMajor_toDate.equals('')">
				AND TO_CHAR(APPLY_DATE, 'YYYY-MM-DD') &lt;= #{doubleMajor_toDate}
			</if>
			<if test="doubleMajor_status !=null and !doubleMajor_status.equals('')">
				AND PROCESS_STATUS = #{doubleMajor_status}
			</if>
		</when>
		<when test="applyCode.equals('takeOff')">
			<if test="takeOffUniv_fromDate != null and !takeOffUniv_fromDate.equals('')">
				AND TO_CHAR(APPLY_DATE, 'YYYY-MM-DD') &gt;= #{takeOffUniv_fromDate}
			</if>
			<if test="takeOffUniv_toDate != null and !takeOffUniv_toDate.equals('')">
				AND TO_CHAR(APPLY_DATE, 'YYYY-MM-DD') &lt;= #{takeOffUniv_toDate}
			</if>
			<if test="takeOffUniv_status !=null and !takeOffUniv_status.equals('')">
				AND PROCESS_STATUS = #{takeOffUniv_status}
			</if>
		</when>
		<when test="applyCode.equals('comeback')">
			<if test="comeback_fromDate != null and !comeback_fromDate.equals('')">
				AND TO_CHAR(APPLY_DATE, 'YYYY-MM-DD') &gt;= #{comeback_fromDate}
			</if>
			<if test="comeback_toDate != null and !comeback_toDate.equals('')">
				AND TO_CHAR(APPLY_DATE, 'YYYY-MM-DD') &lt;= #{comeback_toDate}
			</if>
			<if test="comeback_status !=null and !comeback_status.equals('')">
				AND PROCESS_STATUS = #{comeback_status}
			</if>
		</when>
	</choose>
	ORDER BY APPLY_NO DESC
</select>


<!--by수경 학생이 복학, 휴학, 전과, 복수전공 신청 시 이미 신청내역 있는지 확인 -->
<select id="checkApply" resultMap="deptManage">
	SELECT APPLY_NO 
		 , STU_NO
		 , APPLY_CODE
		 , STU_YEAR
		 , STU_SEM
	FROM DEPT_MANAGE
	WHERE STU_NO = #{stuNo}
	AND APPLY_CODE = #{applyCode}
</select>

<!--by수경 복학/휴학 단일승인(라디오 값) -->
<update id="changeStatus">
	UPDATE DEPT_MANAGE 
	SET PROCESS_STATUS = #{processStatus}
		, APPROVAL_DATE = #{approvalDate} 
	WHERE APPLY_NO = #{applyNo} 
</update>

<!-- by수경 복학/휴학신청 일괄승인 -->
<update id="comebackTakeOffAllAccept">
	UPDATE DEPT_MANAGE
	SET APPROVAL_DATE = #{approvalDate}
		, PROCESS_STATUS = #{processStatus}
	WHERE APPLY_NO IN
	<foreach collection="applyNoList" item="applyNo" separator="," open="(" close=")" >
       #{applyNo}
  	</foreach> 

</update>

<!--by수경 관리자에게 전과신청서 보여주기 -->
<select id="showChangeMajor" resultMap="deptManage">
	SELECT APPLY_NO
		 , (SELECT COLL_NAME FROM COLLEAGE WHERE COLL_NO = FROM_COLL)AS FROM_COLL
		 , (SELECT DEPT_NAME FROM DEPT WHERE DEPT_NO = FROM_DEPT)AS FROM_DEPT
		 , (SELECT COLL_NAME FROM COLLEAGE WHERE COLL_NO = TO_COLL) AS TO_COLL
		 , (SELECT DEPT_NAME FROM DEPT WHERE DEPT_NO =TO_DEPT) AS TO_DEPT
		 , APPLY_REASON
		 , D.STU_NO
		 , S.MEM_NO
		 , (SELECT DEPT_NAME FROM DEPT WHERE DEPT_NO = S.DEPT_NO)AS DEPT_NO
		 , (SELECT COLL_NAME FROM COLLEAGE WHERE COLL_NO = S.COLL_NO)AS COLL_NO
		 , (SELECT STU_STATUS FROM STU WHERE STU_NO = D.STU_NO) AS STU_STATUS
		 , (SELECT TO_CHAR(STU_YEAR)||'학년'||' '||TO_CHAR(STU_SEM)||'학기' FROM DEPT_MANAGE 
		 																	WHERE STU_NO = #{stuNo} 
		 																	AND APPLY_CODE = 'changeMajor') AS STU_YEAR
		 , (SELECT MEM_ADDR ||''|| MEM_ADDR_DETAIL FROM MEMBER WHERE MEM_NO = (SELECT MEM_NO 
		 																	   FROM STU 
		 																	   WHERE STU_NO = D.STU_NO)) AS MEM_ADDR																 
		 , (SELECT MEM_TELL FROM MEMBER WHERE MEM_NO = (SELECT MEM_NO 
		 												FROM STU 
		 												WHERE STU_NO = D.STU_NO)) AS MEM_TELL
		 												
		 , (SELECT MEM_IMAGE FROM MEMBER WHERE MEM_NO = (SELECT MEM_NO 
		 												FROM STU 
		 												WHERE STU_NO = D.STU_NO)) AS MEM_IMAGE
		 												
		 , (SELECT TO_CHAR(MEM_BIRTH, 'YYYY"년"MM"월"DD"일"') FROM MEMBER WHERE MEM_NO = (SELECT MEM_NO 
		 												FROM STU 
		 												WHERE STU_NO = D.STU_NO)) AS MEM_BIRTH
		 												
		 , (SELECT MEM_NAME FROM MEMBER WHERE MEM_NO = (SELECT MEM_NO 
		 												FROM STU 
		 												WHERE STU_NO = D.STU_NO))AS MEM_NAME
		, (SELECT DEPT_NAME FROM DEPT WHERE DEPT_NO = (SELECT DOUBLE_DEPT 
													   FROM DOUBLE_MAJOR M 
													   WHERE M.DOUBLE_NO = S.DOUBLE_NO 
													   AND S.STU_NO = M.STU_NO)) AS DOUBLE_NO 												
	FROM DEPT_MANAGE D, STU S, MEMBER R
	WHERE APPLY_CODE = 'changeMajor'
	AND APPLY_NO = #{applyNo}
	AND S.MEM_NO = R.MEM_NO
	AND S.STU_NO = #{stuNo}
</select>

<!--by수경 관리자에게 복수전공 신청서 보여주기 -->
<select id="showDoubleMajor" resultMap="deptManage">
	SELECT APPLY_NO
		 , (SELECT COLL_NAME FROM COLLEAGE WHERE COLL_NO = FROM_COLL)AS FROM_COLL
		 , (SELECT DEPT_NAME FROM DEPT WHERE DEPT_NO = FROM_DEPT)AS FROM_DEPT
		 , (SELECT COLL_NAME FROM COLLEAGE WHERE COLL_NO = DOUBLE_MAJOR_COLL) AS DOUBLE_MAJOR_COLL
		 , (SELECT DEPT_NAME FROM DEPT WHERE DEPT_NO = DOUBLE_MAJOR_DEPT) AS DOUBLE_MAJOR_DEPT 
		 , APPLY_REASON
		 , D.STU_NO
		 , S.MEM_NO
		 , (SELECT DEPT_NAME FROM DEPT WHERE DEPT_NO = S.DEPT_NO)AS DEPT_NO
		 , (SELECT COLL_NAME FROM COLLEAGE WHERE COLL_NO = S.COLL_NO)AS COLL_NO
		 , (SELECT STU_STATUS FROM STU WHERE STU_NO = D.STU_NO) AS STU_STATUS
		 , (SELECT TO_CHAR(STU_YEAR)||'학년'||' '||TO_CHAR(STU_SEM)||'학기' FROM DEPT_MANAGE 
		 																	WHERE STU_NO = #{stuNo} 
		 																	AND APPLY_CODE = 'doubleMajor') AS STU_YEAR
		 , (SELECT MEM_ADDR ||''|| MEM_ADDR_DETAIL FROM MEMBER WHERE MEM_NO = (SELECT MEM_NO 
		 																	   FROM STU 
		 																	   WHERE STU_NO = D.STU_NO)) AS MEM_ADDR																 
		 , (SELECT MEM_TELL FROM MEMBER WHERE MEM_NO = (SELECT MEM_NO 
		 												FROM STU 
		 												WHERE STU_NO = D.STU_NO)) AS MEM_TELL
		 												
 		 , (SELECT MEM_IMAGE FROM MEMBER WHERE MEM_NO = (SELECT MEM_NO 
		 												FROM STU 
		 												WHERE STU_NO = D.STU_NO)) AS MEM_IMAGE
		 
		 , (SELECT TO_CHAR(MEM_BIRTH, 'YYYY"년"MM"월"DD"일"') FROM MEMBER WHERE MEM_NO = (SELECT MEM_NO 
										 												 FROM STU 
										 												 WHERE STU_NO = D.STU_NO)) AS MEM_BIRTH
		 												
		 , (SELECT MEM_NAME FROM MEMBER WHERE MEM_NO = (SELECT MEM_NO 
		 												FROM STU 
		 												WHERE STU_NO = D.STU_NO))AS MEM_NAME
		, (SELECT DEPT_NAME FROM DEPT WHERE DEPT_NO = (SELECT DOUBLE_DEPT 
													   FROM DOUBLE_MAJOR M 
													   WHERE M.DOUBLE_NO = S.DOUBLE_NO 
													   AND #{stuNo} = M.STU_NO)) AS DOUBLE_NO 												
	FROM DEPT_MANAGE D, STU S, MEMBER R
	WHERE APPLY_CODE = 'doubleMajor' 
	AND  APPLY_NO = #{applyNo}
	AND S.MEM_NO = R.MEM_NO 
	AND S.STU_NO = #{stuNo} 
</select>


<!-- by수경 전과/복수전공신청 일괄승인 -->
<update id="changeDoubleMajorAllAccept">
	UPDATE DEPT_MANAGE
	SET APPROVAL_DATE = #{approvalDate}
		, PROCESS_STATUS = #{processStatus}
	WHERE APPLY_NO IN
	<foreach collection="applyNoList" item="applyNo" separator="," open="(" close=")" >
       #{applyNo}
  	</foreach> 
</update>


<!-- by수경 전과/복수전공신청 단일승인 -->
<update id="acceptChangeDoubleMajor">
	UPDATE DEPT_MANAGE
	SET APPROVAL_DATE = #{approvalDate}
	  , PROCESS_STATUS = #{processStatus}
	WHERE APPLY_NO = #{applyNo}  
</update>


<!-- by수경 학적 신청 KPI 차트 사용 데이터 -->
<select id="showApplyChart" resultMap="chart">
	SELECT COUNT(APPLY_NO) AS APPLY_NO_CNT
	      , TO_CHAR(SYSDATE - 7, 'YY.MM.DD') AS DAY   
	FROM DEPT_MANAGE
	WHERE TO_CHAR(APPLY_DATE, 'YYYYMMDD') = TO_CHAR(SYSDATE-7, 'YYYYMMDD')
	UNION ALL
	SELECT COUNT(APPLY_NO) AS APPLY_NO_CNT 
	      , TO_CHAR(SYSDATE - 6, 'YY.MM.DD') AS DAY  
	FROM DEPT_MANAGE
	WHERE TO_CHAR(APPLY_DATE, 'YYYYMMDD') = TO_CHAR(SYSDATE-6, 'YYYYMMDD')
	UNION ALL
	SELECT COUNT(APPLY_NO) AS APPLY_NO_CNT 
	      , TO_CHAR(SYSDATE - 5, 'YY.MM.DD') AS DAY    
	FROM DEPT_MANAGE
	WHERE TO_CHAR(APPLY_DATE, 'YYYYMMDD') = TO_CHAR(SYSDATE-5, 'YYYYMMDD')
	UNION ALL
	SELECT COUNT(APPLY_NO) AS APPLY_NO_CNT 
	      , TO_CHAR(SYSDATE - 4, 'YY.MM.DD') AS DAY    
	FROM DEPT_MANAGE
	WHERE TO_CHAR(APPLY_DATE, 'YYYYMMDD') = TO_CHAR(SYSDATE-4, 'YYYYMMDD')
	UNION ALL
	SELECT COUNT(APPLY_NO) AS APPLY_NO_CNT 
	      , TO_CHAR(SYSDATE - 3, 'YY.MM.DD') AS DAY    
	FROM DEPT_MANAGE
	WHERE TO_CHAR(APPLY_DATE, 'YYYYMMDD') = TO_CHAR(SYSDATE-3, 'YYYYMMDD')
	UNION ALL
	SELECT COUNT(APPLY_NO) AS APPLY_NO_CNT 
	      , TO_CHAR(SYSDATE - 2, 'YY.MM.DD') AS DAY   
	FROM DEPT_MANAGE
	WHERE TO_CHAR(APPLY_DATE, 'YYYYMMDD') = TO_CHAR(SYSDATE-2, 'YYYYMMDD')
	UNION ALL
	SELECT COUNT(APPLY_NO) AS APPLY_NO_CNT 
	      , TO_CHAR(SYSDATE - 1, 'YY.MM.DD') AS DAY   
	FROM DEPT_MANAGE
	WHERE TO_CHAR(APPLY_DATE, 'YYYYMMDD') = TO_CHAR(SYSDATE-1, 'YYYYMMDD')
	UNION ALL
	SELECT COUNT(APPLY_NO) AS APPLY_NO_CNT 
	      , TO_CHAR(SYSDATE, 'YY.MM.DD') AS DAY   
	FROM DEPT_MANAGE
	WHERE TO_CHAR(APPLY_DATE, 'YYYYMMDD') = TO_CHAR(SYSDATE, 'YYYYMMDD')
</select>

<!-- by수경 학적 승인 KPI 차트 사용 데이터 -->
<select id="showApprovalChart" resultMap="chart">
	SELECT COUNT(APPLY_NO) AS APPLY_NO_CNT
	      , COUNT(APPROVAL_DATE) AS APPROVAL_DATE_CNT
	      , TO_CHAR(SYSDATE - 7, 'YY.MM.DD') AS DAY   
	FROM DEPT_MANAGE
	WHERE APPROVAL_DATE = TO_CHAR(SYSDATE-7, 'YYYY"년"MM"월"DD"일"')
	UNION ALL
	SELECT COUNT(APPLY_NO) AS APPLY_NO_CNT 
	      , COUNT(APPROVAL_DATE) AS APPROVAL_DATE_CNT
	      , TO_CHAR(SYSDATE - 6, 'YY.MM.DD') AS DAY  
	FROM DEPT_MANAGE
	WHERE APPROVAL_DATE = TO_CHAR(SYSDATE-6, 'YYYY"년"MM"월"DD"일"')
	UNION ALL
	SELECT COUNT(APPLY_NO) AS APPLY_NO_CNT 
	      , COUNT(APPROVAL_DATE) AS APPROVAL_DATE_CNT
	      , TO_CHAR(SYSDATE - 5, 'YY.MM.DD') AS DAY    
	FROM DEPT_MANAGE
	WHERE APPROVAL_DATE = TO_CHAR(SYSDATE-5, 'YYYY"년"MM"월"DD"일"')
	UNION ALL
	SELECT COUNT(APPLY_NO) AS APPLY_NO_CNT 
	      , COUNT(APPROVAL_DATE) AS APPROVAL_DATE_CNT
	      , TO_CHAR(SYSDATE - 4, 'YY.MM.DD') AS DAY    
	FROM DEPT_MANAGE
	WHERE APPROVAL_DATE = TO_CHAR(SYSDATE-4, 'YYYY"년"MM"월"DD"일"')
	UNION ALL
	SELECT COUNT(APPLY_NO) AS APPLY_NO_CNT 
	      , COUNT(APPROVAL_DATE) AS APPROVAL_DATE_CNT
	      , TO_CHAR(SYSDATE - 3, 'YY.MM.DD') AS DAY    
	FROM DEPT_MANAGE
	WHERE APPROVAL_DATE = TO_CHAR(SYSDATE-3, 'YYYY"년"MM"월"DD"일"')
	UNION ALL
	SELECT COUNT(APPLY_NO) AS APPLY_NO_CNT 
	      , COUNT(APPROVAL_DATE) AS APPROVAL_DATE_CNT
	      , TO_CHAR(SYSDATE - 2, 'YY.MM.DD') AS DAY   
	FROM DEPT_MANAGE
	WHERE APPROVAL_DATE = TO_CHAR(SYSDATE-2, 'YYYY"년"MM"월"DD"일"')
	UNION ALL
	SELECT COUNT(APPLY_NO) AS APPLY_NO_CNT 
	      , COUNT(APPROVAL_DATE) AS APPROVAL_DATE_CNT
	      , TO_CHAR(SYSDATE - 1, 'YY.MM.DD') AS DAY   
	FROM DEPT_MANAGE
	WHERE APPROVAL_DATE = TO_CHAR(SYSDATE-1, 'YYYY"년"MM"월"DD"일"')
	UNION ALL
	SELECT COUNT(APPLY_NO) AS APPLY_NO_CNT 
	      , COUNT(APPROVAL_DATE) AS APPROVAL_DATE_CNT
	      , TO_CHAR(SYSDATE, 'YY.MM.DD') AS DAY   
	FROM DEPT_MANAGE
	WHERE APPROVAL_DATE = TO_CHAR(SYSDATE, 'YYYY"년"MM"월"DD"일"')
</select>


<!--by수경 학사경고 데이터 차트  -->
<select id="showProbationChart" resultMap="probationCnt">
	SELECT COUNT(PROB_NO) AS PROB_NO_CNT
	      , COUNT(PROB_DATE) AS PROB_DATE_CNT
	      , TO_CHAR(SYSDATE - 7, 'YY.MM.DD') AS DAY   
	FROM ACADEMIC_PROBATION
	WHERE TO_CHAR(PROB_DATE, 'YYYYMMDD') = TO_CHAR(SYSDATE-7, 'YYYYMMDD')
	UNION ALL
	SELECT COUNT(PROB_NO) AS PROB_NO_CNT 
	      , COUNT(PROB_DATE) AS PROB_DATE_CNT
	      , TO_CHAR(SYSDATE - 6, 'YY.MM.DD') AS DAY  
	FROM ACADEMIC_PROBATION
	WHERE TO_CHAR(PROB_DATE, 'YYYYMMDD') = TO_CHAR(SYSDATE-6, 'YYYYMMDD')
	UNION ALL
	SELECT COUNT(PROB_NO) AS PROB_NO_CNT 
	      , COUNT(PROB_DATE) AS PROB_DATE_CNT
	      , TO_CHAR(SYSDATE - 5, 'YY.MM.DD') AS DAY    
	FROM ACADEMIC_PROBATION
	WHERE TO_CHAR(PROB_DATE, 'YYYYMMDD') = TO_CHAR(SYSDATE-5, 'YYYYMMDD')
	UNION ALL
	SELECT COUNT(PROB_NO) AS PROB_NO_CNT 
	      , COUNT(PROB_DATE) AS PROB_DATE_CNT
	      , TO_CHAR(SYSDATE - 4, 'YY.MM.DD') AS DAY    
	FROM ACADEMIC_PROBATION
	WHERE TO_CHAR(PROB_DATE, 'YYYYMMDD') = TO_CHAR(SYSDATE-4, 'YYYYMMDD')
	UNION ALL
	SELECT COUNT(PROB_NO) AS PROB_NO_CNT 
	      , COUNT(PROB_DATE) AS PROB_DATE_CNT
	      , TO_CHAR(SYSDATE - 3, 'YY.MM.DD') AS DAY    
	FROM ACADEMIC_PROBATION
	WHERE TO_CHAR(PROB_DATE, 'YYYYMMDD') = TO_CHAR(SYSDATE-3, 'YYYYMMDD')
	UNION ALL
	SELECT COUNT(PROB_NO) AS PROB_NO_CNT 
	      , COUNT(PROB_DATE) AS PROB_DATE_CNT
	      , TO_CHAR(SYSDATE - 2, 'YY.MM.DD') AS DAY   
	FROM ACADEMIC_PROBATION
	WHERE TO_CHAR(PROB_DATE, 'YYYYMMDD') = TO_CHAR(SYSDATE-2, 'YYYYMMDD')
	UNION ALL
	SELECT COUNT(PROB_NO) AS PROB_NO_CNT 
	      , COUNT(PROB_DATE) AS PROB_DATE_CNT
	      , TO_CHAR(SYSDATE - 1, 'YY.MM.DD') AS DAY   
	FROM ACADEMIC_PROBATION
	WHERE TO_CHAR(PROB_DATE, 'YYYYMMDD') = TO_CHAR(SYSDATE-1, 'YYYYMMDD')
	UNION ALL
	SELECT COUNT(PROB_NO) AS PROB_NO_CNT 
	      , COUNT(PROB_DATE) AS PROB_DATE_CNT
	      , TO_CHAR(SYSDATE, 'YY.MM.DD') AS DAY   
	FROM ACADEMIC_PROBATION
	WHERE TO_CHAR(PROB_DATE, 'YYYYMMDD') = TO_CHAR(SYSDATE, 'YYYYMMDD')
</select>

<!--by수경 제적 데이터 차트  -->
<select id="showStuOutChart" resultMap="stuOutCnt">
	SELECT COUNT(STU_OUT_NO) AS STU_OUT_CNT
	      , COUNT(STU_OUT_DATE) AS STU_OUT_DATE_CNT
	      , TO_CHAR(SYSDATE - 7, 'YY.MM.DD') AS DAY   
	FROM STU_OUT
	WHERE TO_CHAR(STU_OUT_DATE, 'YYYYMMDD') = TO_CHAR(SYSDATE-7, 'YYYYMMDD')
	UNION ALL
	SELECT COUNT(STU_OUT_NO) AS STU_OUT_CNT 
	      , COUNT(STU_OUT_DATE) AS STU_OUT_DATE_CNT
	      , TO_CHAR(SYSDATE - 6, 'YY.MM.DD') AS DAY  
	FROM STU_OUT
	WHERE TO_CHAR(STU_OUT_DATE, 'YYYYMMDD') = TO_CHAR(SYSDATE-6, 'YYYYMMDD')
	UNION ALL
	SELECT COUNT(STU_OUT_NO) AS STU_OUT_CNT 
	      , COUNT(STU_OUT_DATE) AS STU_OUT_DATE_CNT
	      , TO_CHAR(SYSDATE - 5, 'YY.MM.DD') AS DAY    
	FROM STU_OUT
	WHERE TO_CHAR(STU_OUT_DATE, 'YYYYMMDD') = TO_CHAR(SYSDATE-5, 'YYYYMMDD')
	UNION ALL
	SELECT COUNT(STU_OUT_NO) AS STU_OUT_CNT 
	      , COUNT(STU_OUT_DATE) AS STU_OUT_DATE_CNT
	      , TO_CHAR(SYSDATE - 4, 'YY.MM.DD') AS DAY    
	FROM STU_OUT
	WHERE TO_CHAR(STU_OUT_DATE, 'YYYYMMDD') = TO_CHAR(SYSDATE-4, 'YYYYMMDD')
	UNION ALL
	SELECT COUNT(STU_OUT_NO) AS STU_OUT_CNT 
	      , COUNT(STU_OUT_DATE) AS STU_OUT_DATE_CNT
	      , TO_CHAR(SYSDATE - 3, 'YY.MM.DD') AS DAY    
	FROM STU_OUT
	WHERE TO_CHAR(STU_OUT_DATE, 'YYYYMMDD') = TO_CHAR(SYSDATE-3, 'YYYYMMDD')
	UNION ALL
	SELECT COUNT(STU_OUT_NO) AS STU_OUT_CNT 
	      , COUNT(STU_OUT_DATE) AS STU_OUT_DATE_CNT
	      , TO_CHAR(SYSDATE - 2, 'YY.MM.DD') AS DAY   
	FROM STU_OUT
	WHERE TO_CHAR(STU_OUT_DATE, 'YYYYMMDD') = TO_CHAR(SYSDATE-2, 'YYYYMMDD')
	UNION ALL
	SELECT COUNT(STU_OUT_NO) AS STU_OUT_CNT 
	      , COUNT(STU_OUT_DATE) AS STU_OUT_DATE_CNT
	      , TO_CHAR(SYSDATE - 1, 'YY.MM.DD') AS DAY   
	FROM STU_OUT
	WHERE TO_CHAR(STU_OUT_DATE, 'YYYYMMDD') = TO_CHAR(SYSDATE-1, 'YYYYMMDD')
	UNION ALL
	SELECT COUNT(STU_OUT_NO) AS STU_OUT_CNT 
	      , COUNT(STU_OUT_DATE) AS STU_OUT_DATE_CNT
	      , TO_CHAR(SYSDATE, 'YY.MM.DD') AS DAY   
	FROM STU_OUT
	WHERE TO_CHAR(STU_OUT_DATE, 'YYYYMMDD') = TO_CHAR(SYSDATE, 'YYYYMMDD')

</select>
</mapper>
