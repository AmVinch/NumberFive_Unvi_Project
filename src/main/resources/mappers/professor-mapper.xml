<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 해당 파일에 모든 쿼리문을 작성 -->
<!--  By 지아-->
<mapper namespace="professorMapper">
	
	<resultMap type="kh.study.NF.dept.vo.DeptVO" id="dept">
		<id column="DEPT_NO" property="deptNo"/>
		<result column="DEPT_NAME" property="deptName"/>
		<result column="COLL_NO" property="collNo"/>
	</resultMap>
	
	<resultMap type="kh.study.NF.dept.vo.ColleageVO" id="coll">
		<id column="COLL_NO" property="collNo"/>
		<result column="COLL_NAME" property="collName"/>
	</resultMap>

	<!-- 기준이 되는 점수  -->
	<resultMap type="kh.study.NF.professor.vo.GradeVO" id="grade">
		<id column="GRADE" property="grade"/>
		<result column="SCORE" property="score"/>
	</resultMap>
	
	<!-- 학생 점수 -->
	<resultMap type="kh.study.NF.professor.vo.StuGradeVO" id="stuGrade">
		<id column="STU_GRADE_NO" property="stuGradeNo"/>
		<result column="LEC_NO" property="lecNo"/>	
		<result column="STU_NO" property="stuNo"/>	
		<result column="STU_NO" property="grade"/>	
		<result column="SEM_NO" property="semNo"/>	
		<result column="LEC_NAME" property="lecName"/>	
		<association  property="gradeVO" resultMap="grade"/>	
		<association  property="studentVO" resultMap="studentMapper.student"/>	
	</resultMap>
	

	<!-- 강의등록  -->
	<resultMap type="kh.study.NF.professor.vo.LectureVO" id="lecture">
		<id column="LEC_NO" property="lecNo"/>
		<result column="LEC_NAME" property="lecName"/>
		<result column="LEC_SCORE" property="lecScore"/>
		<result column="COLL_NO" property="collNo"/>
		<result column="DEPT_NO" property="deptNo"/>
		<result column="EMP_NO" property="empNo"/>
		<result column="CREATE_DATE" property="createDate"/>
		<result column="MAX_NUM" property="maxNum"/>
		<result column="NOW_NUM" property="nowNum"/>
		<result column="SEM_NO" property="semNo"/>
		<result column="LEC_STATUS" property="lecStatus"/>
		
		<!-- by 유빈 : 시간표불러오기 추가함. /////////////////////////-->
		<result column="START_ROW_NUM" property="startRowNum"/>
		<result column="END_ROW_NUM" property="endRowNum"/>
		<result column="LEC_DAY" property="lecDay"/>
		<!-- ////////////////////////////////////////////////////////// -->		
		
		<association property="lecturePdfVO" resultMap="lecturePdf"/>
		<association property="lectureTimeVO" resultMap="lectureTime"/>
		<association property="stuGradeVO" resultMap="stuGrade"/>
	</resultMap>
	
	<!--강의pdf  -->
	<resultMap type="kh.study.NF.professor.vo.LecturePdfVO" id="lecturePdf">
		<id column="PDF_NO" property="pdfNo"/>
		<result column="ORIGIN_PDF_NAME" property="originPdfName"/>
		<result column="ATTACHED_PDF_NAME" property="attachedPdfName"/>
		<result column="LEC_NO" property="lecNo"/>
	</resultMap>


	<!--강의시간  -->
	<resultMap type="kh.study.NF.professor.vo.LectureTimeVO" id="lectureTime">
		<id column="TIME_NO" property="timeNo"/>
		<result column="LEC_DAY" property="lecDay"/>
		<result column="FIRST_TIME" property="firstTime"/>
		<result column="LAST_TIME" property="lastTime"/>
		<result column="LEC_NO" property="lecNo"/>
	</resultMap>
	<!-- 서치벨류를 리졸트에 추가 하지 않은이유 : 조회 할때 필요하고 insert시엔 필요 x 이기 때문  -->
	<!-- 학기 -->
	<resultMap type="kh.study.NF.professor.vo.SemesterVO" id="semester">
		<id column="SEM_NO" property="semNo"/>
		<result column="SEM_YEAR" property="semYear"/>
		<result column="SEMESTER" property="semester"/>
		<result column="SEM_NAME" property="semName"/>
	</resultMap>
	<!-- emp -->
	<resultMap type="kh.study.NF.emp.vo.EmpVO" id="emp">
		<id column="EMP_NO" property="empNo"/>
		<result column="EMP_TYPE" property="empType"/>
		<result column="DEPT_NO" property="deptNo"/>
		<result column="MEM_NO" property="memNo"/>
		<result column="COLL_NO" property="collNo"/>
	</resultMap>
	
	<!-- 수강신청 목록 -->
	<resultMap type="kh.study.NF.professor.vo.EnrollmentVO" id="enrollment">
		<id column="ENROLLMENT_NO" 	property="enrollmentNo"/>
		<result column="LEC_NO" 	property="lecNo"/>
		<result column="STU_NO" 	property="stuNo"/>
		<result column="SEM_NO" 	property="semNo"/>
		<association property="lectureVO" resultMap="lecture"/>
	</resultMap>

<!-- by 유빈 : 시간표 불러오기 -->
<!-- ////////////////////////////////////////////////////////////////////////////// -->
	<select id="loadTimeTable" resultMap="lecture">
		SELECT 
		    REGEXP_SUBSTR(LEC_DAY,'[^,]+', 1, LEVEL) AS LEC_DAY
		    , LT.LEC_NO
		    , LEC_NAME
		    , TO_NUMBER( SUBSTR(FIRST_TIME, 1, INSTR(FIRST_TIME, ':') -1) )-9 AS START_ROW_NUM
		    , TO_NUMBER( SUBSTR(LAST_TIME, 1, INSTR(LAST_TIME, ':') -1) )-9 AS END_ROW_NUM
		    , (SELECT MEM_NAME
		        FROM MEMBER
		        WHERE MEM_NO = (SELECT MEM_NO
		                        FROM EMP
		                        WHERE EMP_NO = (SELECT EMP_NO 
		                                        FROM LECTURE
		                                        WHERE LEC_NO = LE.LEC_NO))) AS EMP_NO     
		FROM LECTURE_TIME LT, LECTURE LE
		WHERE LT.LEC_NO =LE.LEC_NO
		CONNECT BY REGEXP_SUBSTR(LEC_DAY, '[^,]+', 1, LEVEL) IS NOT NULL
	</select>
<!-- ////////////////////////////////////////////////////////////////////////////// -->


<!-- 다음 강의에서 사용되는 No -->
	<select id="getNextLecNo" resultType="String">
		SELECT 'LEC_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(LEC_NO, 5))),0) +1, 3,0)
		FROM LECTURE
	</select>

	<!--강의 등록-->
	<insert id="insertProLec">
		INSERT INTO LECTURE (
			LEC_NO
			, LEC_NAME
			, LEC_SCORE
			, COLL_NO
			, DEPT_NO
			, EMP_NO
			, MAX_NUM 
			, NOW_NUM 
			, SEM_NO

		) VALUES (
			#{lecNo}
			, #{lecName}
			, #{lecScore}
			, #{collNo}
			, #{deptNo}
			, #{empNo}
			, #{maxNum}
			, #{nowNum}
			, #{semNo}

		)
	</insert>

	<insert id="insertLecPpf">
		INSERT INTO LECTURE_PDF(
			PDF_NO
			, ORIGIN_PDF_NAME
			, ATTACHED_PDF_NAME
			, LEC_NO
		) VALUES (
		(SELECT 'PDF_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(PDF_NO, 5))),0)+1,3,0) FROM LECTURE_PDF)			
		, #{originPdfName}
		, #{attachedPdfName}
		, #{lecNo}
		)
	
	</insert>
	
	<insert id="insertLecTime">
		INSERT INTO LECTURE_TIME(
			TIME_NO
			, LEC_DAY
			, FIRST_TIME
			, LAST_TIME
			, LEC_NO
		) VALUES (
		(SELECT 'TIME_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(TIME_NO, 6))),0)+1,3,0) FROM LECTURE_TIME)			
		, #{lecDay}
		, #{firstTime}
		, #{lastTime}
		, #{lecNo}
		)
	</insert>
	
	<!-- 등록된 강의 조회  -->
	<select id="selectLecList"  resultMap="lecture">
	       SELECT
			L.LEC_NO
			, LEC_NAME
			, LEC_SCORE
			,(SELECT COLL_NAME
		        FROM COLLEAGE
		        WHERE COLL_NO = L.COLL_NO) AS COLL_NO
			, (SELECT DEPT_NAME
		        FROM DEPT
		        WHERE DEPT_NO = L.DEPT_NO) AS DEPT_NO
			, (SELECT MEM_NAME
		        FROM MEMBER
		        WHERE MEM_NO = (SELECT MEM_NO
                                FROM EMP
                                WHERE EMP_NO = L.EMP_NO)) AS EMP_NO
			, LEC_DAY
			, (SELECT FIRST_TIME||'-'||LAST_TIME
							  FROM LECTURE_TIME WHERE LEC_NO = L.LEC_NO ) AS LAST_TIME
			, PDF_NO
			, ORIGIN_PDF_NAME
			, ATTACHED_PDF_NAME
		FROM LECTURE L, LECTURE_PDF LP, LECTURE_TIME LT
		WHERE  L.LEC_NO = LP.LEC_NO AND L.LEC_NO = LT.LEC_NO 
		ORDER BY LEC_NO DESC
		<!-- 해당 입력한 강의의 교수만 수정? 조회 ?? -->
		<!-- 강의 날짜벨리데이션 처리?? -->
		<!-- 학생은 강의 관리가 눌리면 안됨  -->
	</select>
	
	<!-- 선택한 강의목록 -->
	<select id="selectLecture" resultMap="lecture">
		 SELECT
			L.LEC_NO
			, LEC_NAME
			, LEC_SCORE
			,(SELECT COLL_NAME
		        FROM COLLEAGE
		        WHERE COLL_NO = L.COLL_NO) AS COLL_NO
			, (SELECT DEPT_NAME
		        FROM DEPT
		        WHERE DEPT_NO = L.DEPT_NO) AS DEPT_NO
			, (SELECT MEM_NAME
		        FROM MEMBER
		        WHERE MEM_NO = (SELECT MEM_NO
                                FROM EMP
                                WHERE EMP_NO = L.EMP_NO)) AS EMP_NO
			, LEC_DAY
			,  FIRST_TIME
			, LAST_TIME
			, PDF_NO
			, ORIGIN_PDF_NAME
			, ATTACHED_PDF_NAME
		FROM LECTURE L, LECTURE_PDF LP, LECTURE_TIME LT
		WHERE  L.LEC_NO = LP.LEC_NO AND L.LEC_NO = LT.LEC_NO
		AND L.LEC_NO = #{lecNo}
	
	</select>
	
	
	<!-- 강의 업데이트 쿼리  -->
	<update id="updateLec" >
		UPDATE  LECTURE
		SET 
			LEC_NAME = #{lecName}
			, LEC_SCORE = #{lecScore}

		WHERE LEC_NO = #{lecNo}
	</update>
		
	<update id="updateLecTime" >
		UPDATE LECTURE_TIME
		SET 
			 LEC_DAY = #{lecDay}
			,  FIRST_TIME = #{firstTime}
			, LAST_TIME = #{lastTime}
		WHERE LEC_NO = #{lecNo}
	</update>
	
	<!-- 강의 삭제 -->
	<delete id="deleteLec">
	DELETE 	LECTURE
	WHERE LEC_NO = #{lecNo}
	</delete>

	
	<!-- 강의에 첨부된 파일 조회  -->
	<select id="selectLecPdf" resultMap="lecturePdf">
	SELECT 
		PDF_NO
		, ORIGIN_PDF_NAME
		, ATTACHED_PDF_NAME
		, LEC_NO
	FROM LECTURE_PDF
	WHERE LEC_NO = #{lecNo}
	</select>
	
	<!-- 등록 전 이미 등록 되어있는 날짜에 같은 교수가 등록안되게 조회먼저 -->
	<select id="selectTime" resultMap="lectureTime">
	SELECT TIME_NO
		, LEC_DAY
		, LEC_NO
		, FIRST_TIME
		, LAST_TIME
	FROM LECTURE_TIME
	WHERE (SELECT EMP_NO
        FROM LECTURE
        WHERE LEC_NO = LECTURE_TIME.LEC_NO) = #{empNo}
	AND (
		<foreach collection="dayList" item="lecDay" separator="OR LEC_DAY LIKE" open="LEC_DAY LIKE">
			TRIM(#{lecDay})
		</foreach>
	)
	AND (FIRST_TIME &gt;= #{firstTime} OR LAST_TIME &gt;= #{firstTime}) 
	AND (FIRST_TIME &lt;= #{lastTime} OR LAST_TIME &lt;= #{lastTime})
	</select>
	
	
	
		<!-- 등록된 강의 수강신청시 조회  -->
	<select id="selectLecLIstEnroll"  resultMap="lecture">
	 	SELECT
			L.LEC_NO
			, LEC_NAME
			, LEC_SCORE
			,(SELECT COLL_NAME
		        FROM COLLEAGE
		        WHERE COLL_NO = L.COLL_NO) AS COLL_NO
			, (SELECT DEPT_NAME
		        FROM DEPT
		        WHERE DEPT_NO = L.DEPT_NO) AS DEPT_NO
			, (SELECT MEM_NAME
		        FROM MEMBER
		        WHERE MEM_NO = (SELECT MEM_NO
                                FROM EMP
                                WHERE EMP_NO = L.EMP_NO)) AS EMP_NO
			, (SELECT LEC_DAY||'/'||FIRST_TIME||'-'||LAST_TIME
							  FROM LECTURE_TIME WHERE LEC_NO = L.LEC_NO ) AS LAST_TIME
			, MAX_NUM 
			, NOW_NUM 
			, (SELECT SEM_NAME
		        FROM SEMESTER
		        WHERE SEM_NO = L.SEM_NO) AS SEM_NO
			, PDF_NO
			, ORIGIN_PDF_NAME
			, ATTACHED_PDF_NAME
			, CASE 
                WHEN MAX_NUM - NOW_NUM > 0 THEN 'Y'
                ELSE 'N' END AS LEC_STATUS
		FROM LECTURE L, LECTURE_PDF LP, LECTURE_TIME LT
		WHERE  L.LEC_NO = LP.LEC_NO AND L.LEC_NO = LT.LEC_NO
	<!-- 	AND COLL_NO = #{}
		AND DEPT_NO = #{}
	 -->
	 	<foreach collection="emrolledList" separator="," item="lecNo" open="AND L.LEC_NO NOT IN (" close=")">
			#{lecNo}
	 	</foreach>
	 	
	 	<if test="paramMap.collNo != null and !paramMap.collNo.equals('')"> <!-- 처음 화면을 키면 빈값이 넘어오고 아무것도 입력안하고 검색누르면 빈값이 넘어간다  -->
	 		AND COLL_NO = #{paramMap.collNo}
	 	</if>
	 	<if test="paramMap.deptNo != null and !paramMap.deptNo.equals('')">
	 		AND DEPT_NO = #{paramMap.deptNo}
	 	</if>
	 	<if test="paramMap.searchValue != null and !paramMap.searchValue.equals('')">
	 		AND (UPPER(LEC_NAME) LIKE '%'||UPPER(#{paramMap.searchValue})||'%' 
	 		OR UPPER((SELECT MEM_NAME
		        FROM MEMBER
		        WHERE MEM_NO = (SELECT MEM_NO
                                FROM EMP
                                WHERE EMP_NO = L.EMP_NO))) LIKE '%'||UPPER(#{paramMap.searchValue})||'%')
	 	</if>
	 	
	 	ORDER BY LEC_NO DESC
	</select>
	
	<select id="selectEnrollmentLecNoList" resultType="String">
		SELECT LEC_NO
		FROM ENROLLMENT
		WHERE STU_NO = #{stuNo}
	</select>

	<!-- 수강신청 클릭 -->
	<insert id="insertEnroll">
		INSERT INTO ENROLLMENT (
		ENROLLMENT_NO
		, LEC_NO
		, STU_NO
		) VALUES (
		(SELECT 'ENROLLMENT_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(ENROLLMENT_NO, 12))),0)+1,3,0) FROM ENROLLMENT)
	, #{lecNo}
	, #{stuNo}) <!-- 확인 하고 주석지우기 -->
	</insert>

	<!-- 수강 참여 인원 증가  -->
	<update id="updateNowNum">
	 UPDATE LECTURE 
	 SET NOW_NUM = NOW_NUM+1 WHERE LEC_NO = #{lecNo}
	</update>

	<!-- 학생이 신청한 수강목록  -->
	<select id="selectStuLecture" resultMap="enrollment">
	<!-- 	SELECT 
			ENROLLMENT_NO
			, LEC_NO
			, STU_NO
		FROM ENROLLMENT E
		WHERE STU_NO = #{stuNo} -->
		
		
		SELECT ENROLLMENT_NO
		    , LEC_NO
		    , STU_NO
		    , (SELECT LEC_NAME
		        FROM LECTURE
		        WHERE LEC_NO =  E.LEC_NO) AS LEC_NAME
		    , (SELECT LEC_SCORE
		        FROM LECTURE
		        WHERE LEC_NO =  E.LEC_NO) AS LEC_SCORE
		    , (SELECT COLL_NAME
		        FROM COLLEAGE
		        WHERE COLL_NO = (SELECT COLL_NO
		                        FROM LECTURE
		                        WHERE LEC_NO = E.LEC_NO)) AS COLL_NO     
		    , (SELECT DEPT_NAME
		        FROM DEPT
		        WHERE DEPT_NO  = (SELECT DEPT_NO 
		                        FROM LECTURE
		                        WHERE LEC_NO = E.LEC_NO)) AS DEPT_NO                          
		    , (SELECT MEM_NAME
		        FROM MEMBER
		        WHERE MEM_NO = (SELECT MEM_NO
		                        FROM EMP
		                        WHERE EMP_NO = (SELECT EMP_NO 
		                                        FROM LECTURE
		                                        WHERE LEC_NO = E.LEC_NO))) AS EMP_NO                   
		    , (SELECT LEC_DAY||'/'||FIRST_TIME||'-'||LAST_TIME
		        FROM LECTURE_TIME 
		        WHERE LEC_NO = (SELECT LEC_NO
		                         FROM LECTURE
		                         WHERE LEC_NO = E.LEC_NO)) AS LAST_TIME
		    , (SELECT MAX_NUM
		         FROM LECTURE
		         WHERE LEC_NO = E.LEC_NO) AS MAX_NUM 
		    , (SELECT NOW_NUM
		         FROM LECTURE
		         WHERE LEC_NO = E.LEC_NO) AS NOW_NUM      
		
		   , (SELECT SEM_NAME
		        FROM SEMESTER
		        WHERE SEM_NO = (SELECT SEM_NO
		                         FROM LECTURE
		                         WHERE LEC_NO = E.LEC_NO)) AS SEM_NO
		    , (SELECT PDF_NO
		         FROM LECTURE_PDF
		         WHERE LEC_NO = E.LEC_NO)  AS PDF_NO
		   , (SELECT ORIGIN_PDF_NAME
		         FROM LECTURE_PDF
		         WHERE LEC_NO = E.LEC_NO)  AS ORIGIN_PDF_NAME
		   , (SELECT ATTACHED_PDF_NAME
		         FROM LECTURE_PDF
		         WHERE LEC_NO = E.LEC_NO)  AS ATTACHED_PDF_NAME                                     
		FROM ENROLLMENT E
		WHERE STU_NO = #{stuNo}
		ORDER BY LEC_NO DESC
		 <!-- 확인 하고 주석지우기 -->
	</select>
	
	
	<!-- 수강 신청 취소시 진행   -->
	<delete id="deleteStuLec">
		DELETE FROM ENROLLMENT
		WHERE  STU_NO = #{stuNo} 
		AND LEC_NO = #{lecNo}
	</delete>
	<!-- 수강 신청 취소시 학생 점수도 삭제 진행   -->
	<delete id="deleteStuLecGrade">
		DELETE FROM STU_GRADE
		WHERE  STU_NO = #{stuNo} 
		AND LEC_NO = #{lecNo}
	</delete>
	
	<!-- 수강 취소시 인원 감소  -->
	<update id="subNowNum">
	 UPDATE LECTURE 
	 SET NOW_NUM = NOW_NUM-1 WHERE LEC_NO = #{lecNo}
	</update>
	
	
	
	
	<!-- 점수 등록을 위한 교수 강의 조회 -->
	<select id="selectProFLecList"  resultMap="lecture">
	  SELECT
			L.LEC_NO
			, LEC_NAME
			, LEC_SCORE
			,(SELECT COLL_NAME
		        FROM COLLEAGE
		        WHERE COLL_NO = L.COLL_NO) AS COLL_NO
			, (SELECT DEPT_NAME
		        FROM DEPT
		        WHERE DEPT_NO = L.DEPT_NO) AS DEPT_NO
			, (SELECT MEM_NAME
		        FROM MEMBER
		        WHERE MEM_NO = (SELECT MEM_NO
                                FROM EMP
                                WHERE EMP_NO = L.EMP_NO)) AS EMP_NO
			, (SELECT LEC_DAY||'/'||FIRST_TIME||'-'||LAST_TIME
							  FROM LECTURE_TIME WHERE LEC_NO = L.LEC_NO ) AS LEC_DAY
		FROM LECTURE L, LECTURE_TIME LT
		WHERE L.LEC_NO = LT.LEC_NO AND 
		EMP_NO = #{empNo}
		ORDER BY LEC_NO DESC
	
	
	</select>


	 <!-- 점수등록할 강의의 학생들 목록 조회  -->
 	<select id="selectLecEnrollStuList" resultMap="stuGrade">
	SELECT 
		L.LEC_NO
		,(SELECT LEC_NAME
		        FROM LECTURE
		        WHERE LEC_NO = L.LEC_NO) AS LEC_NAME
		, G.STU_NO

		, (SELECT MEM_NAME
		        FROM MEMBER
		        WHERE MEM_NO = (SELECT MEM_NO
                                FROM STU
                                WHERE STU_NO = S.STU_NO)) AS MEM_NO
	    , GRADE
		FROM STU S, LECTURE L , STU_GRADE G 
		WHERE L.LEC_NO = G.LEC_NO AND S.STU_NO = G.STU_NO 
		AND L.LEC_NO = #{lecNo} 
	   <!--  AND S.STU_NO = 'STU_001' --> 
	   <!-- 	<if test="lecNo != null and !lecNo.equals('')">
		AND L.LEC_NO = #{lecNo}
		</if> -->
	</select> 
	
	<!-- 수강신청시 등록되는 학생점수  -->
	 <insert id="settingStuGrade">
		INSERT INTO STU_GRADE(
		    STU_GRADE_NO
		    , LEC_NO
		    , STU_NO
		)VALUES (
		    (SELECT 'STU_GRADE_' ||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(STU_GRADE_NO,11))),0)+1,3,0) FROM STU_GRADE)
		    , #{lecNo}
		  	, #{stuNo}
		)
	</insert>
	<!-- 학생 점수 변경  -->
	<update id="udpateGrade">
	UPDATE STU_GRADE
	SET GRADE = #{grade} 
	WHERE STU_NO = #{stuNo} AND LEC_NO = #{lecNo}
	<!-- 학생이 선택한 강의만 변경 -->
	</update>





	<!-- grade목록조회 -->	
 	<select id="gradeList" resultMap="grade">
		SELECT 
		 	  GRADE 
	    	, SCORE
	    FROM  GRADE
	</select>
	<!-- dept목록조회 -->	
	<select id="selectDept" resultMap="dept">
	SELECT 
	 	DEPT_NO 
    	, DEPT_NAME
   		, COLL_NO
    FROM  DEPT
	</select>

	<!-- coll목록조회 -->	
	<select id="selectColl" resultMap="coll">
	SELECT 
	 	COLL_NO 
    	, COLL_NAME
    FROM  COLLEAGE
	</select>
	
	<!-- coll의 dept리스트조회 -->
	<select id="getDeptList" resultMap="dept">
	SELECT 
	 	D.DEPT_NO 
    	, DEPT_NAME
   		, C.COLL_NO
   		, COLL_NAME
   		
    FROM  DEPT D , COLLEAGE C
    WHERE D.COLL_NO = C.COLL_NO
    <if test="_parameter != null and !_parameter.equals('')">
    AND D.COLL_NO = #{collNo}
    </if>
	ORDER BY COLL_NO
	
	</select>
<!-- 학기 조회  -->	
	<select id="selectSemester"  resultMap="semester">
	SELECT 
	  SEM_NO
    , SEM_YEAR
    , SEMESTER
    , SEM_NAME
    FROM SEMESTER
	</select>	
	
	<!-- emp 조회 -->
	<select id="selectEmp" resultMap="emp">
	SELECT 
		EMP_NO
		, EMP_TYPE
		, DEPT_NO
		, (SELECT MEM_NAME
		        FROM MEMBER
		        WHERE MEM_NO = EMP.MEM_NO) AS MEM_NO
		, COLL_NO
	FROM EMP
	
	</select>
	
	
</mapper>






